name: Deploy to GitHub Pages

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy-to-github-pages:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
    
      # Sets up .NET Core SDK
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.401
          
      # Publishes Blazor project to the release folder
      - name: Publish .NET Core Project
        run: dotnet publish -c Release -o release --nologo
        
      # Changes the base-tag in index.html from '/' to 'ChatBlazorApp' to match GitHub Pages repository subdirectory
      - name: Change base-tag in index.html from / to ChatBlazorApp
        run: sed -i 's/<base href="\/" \/>/<base href="\/ChatBlazorApp\/" \/>/g' release/wwwroot/index.html

      # Copy index.html to 404.html to serve the same file when a file is not found
      - name: Copy index.html to 404.html
        run: cp release/wwwroot/index.html release/wwwroot/404.html
        
      # Add .nojekyll file to tell GitHub pages to not treat this as a Jekyll project
      - name: Add .nojekyll file
        run: touch release/wwwroot/.nojekyll
        
      # Commit wwwroot to the GitHub Pages
      - name: Commit wwwroot to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: release/wwwroot
